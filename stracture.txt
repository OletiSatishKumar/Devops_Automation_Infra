Devops_Automation_Infra/
├── helm/
│   ├── taskmanager/                     # Main Helm chart for app
│   │   ├── Chart.yaml
│   │   ├── values.yaml                  # Base config (shared)
│   │   ├── values-dev.yaml              # Dev environment overrides
│   │   ├── values-prod.yaml             # Prod environment overrides
│   │   ├── templates/
│   │   │   ├── deployment-frontend.yaml
│   │   │   ├── deployment-backend.yaml
│   │   │   ├── service-frontend.yaml
│   │   │   ├── service-backend.yaml
│   │   │   ├── ingress.yaml
│   │   │   └── _helpers.tpl
├── k8s/
│   └── base/
│       ├── namespace-dev.yaml
│       └── namespace-prod.yaml
│
├── argocd/
│   ├── taskmanager-dev-app.yaml        # Argo CD Application (Dev)
│   └── taskmanager-prod-app.yaml       # Argo CD Application (Prod)
|
├── secrets/                             # Optional: Store sealed secrets or templates
│   ├── mongodb-prod-secret.yaml         # For MongoDB Atlas credentials
│   └── mongodb-dev-secret.yaml          # For Dev Mongo (if needed)
│
├── README.md
└── .gitignore



helm install taskmanager-dev ./helm/taskmanager -n dev-namespace -f ./helm/taskmanager/values-dev.yaml

helm update taskmanager-dev ./helm/taskmanager -n dev-namespace -f ./helm/taskmanager/values-dev.yaml

kubectl port-forward svc/backend 8000:80 -n dev-namespace

# Monitoring 

kubectl create namespace monitoring

helm install prometheus prometheus-community/prometheus -n monitoring -f prometheus/prometheus-values.yaml

helm install grafana grafana/grafana -n monitoring -f grafana/grafana-values.yaml




# 2. Create Required Kubernetes Namespaces

kubectl apply -f k8s/base/namespace-dev.yaml
kubectl apply -f k8s/base/namespace-prod.yaml

kubectl create namespace monitoring

# 3. Apply Secrets (MongoDB URIs)

kubectl apply -f secrets/mongodb-dev-secret.yaml -n dev-namespace
kubectl apply -f secrets/mongodb-prod-secret.yaml -n prod-namespace

#  4. Set Up Argo CD (if not done)

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

### password 

kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d


kubectl port-forward svc/argocd-server -n argocd 8080:443


# Apply Argo CD Applications

kubectl apply -f argocd/taskmanager-dev-app.yaml
kubectl apply -f argocd/taskmanager-prod-app.yaml


kubectl apply -f argocd/prometheus-app.yaml
kubectl apply -f argocd/grafana-app.yaml



ngrok http https://localhost:8080